target
    根据这些数据 借助机器学习 深度学习
    借助Web技术搭建故障诊断系统
    该系统支持用户上传训练集对模型进行训练和模型下载
        ·数据集的上传：
            ·上传训练集的考虑实现：
                ·表单上传                   单条和多条
                ·文件上传(.csv/.xlsx/.xls)  单条和多条
            ·上传测试集的考虑实现：
                ·表单上传                   单条和多条
                ·文件上传(.csv/.xlsx/.xls)  单条和多条
        ·训练结果(产生的算法模型)下载的考虑实现：
        ·测试结果可视化的考虑实现：
        ·测试结果下载的考虑实现：
            ·网页前端的逻辑设计(逻辑核心&思路)：
                通过利用urls和view视图的映射关系 界面的设计可以这样考虑
                ·主要有三个核心视图选项
                    ·第一个模块是 模型训练(主要是提供自定义数据集进行训练 得到的训练模型可供下载 默认提供大赛数据集的训练模型和下载)
                    ·第二个模块是 模型导入(默认导入的已经训练完的大赛数据集的 可以选择导入第一个模块自定义生成的来切换 格式上可能就是.py ...)
                    ·第三个模块是 模型测试(根据第二步导入的模型进行测试)
                ·首先是算法模型的训练：
                    ·首先需要用户选择是使用默认数据集还是自定义数据集去训练产生相关模型 不同选择对应进入不同的视图
                    ·视图1 默认提供 利用大赛数据已经跑出的算法模型 其实就是利用大赛的.csv文件得到的参数模型：
                        ·在当前对应的视图显示输出相关模型的信息 并且提供模型下载的功能(可能就是一个含有注释的.py文件...)
                    ·视图2 支持用户自定义提供数据集进行模型的训练和产生：
                        ·如果是这种情况 就需要用户进一步选择是表单上传还是文件上传数据集的模式了
                        ·选择表单上传后就是一条或者多条指定格式的数据输入上传(这里可能会判断添加的数量够不够 至少需要多少才可以进行训练)
                        ·选择文件上传就会跳转到文件上传的指令(这里会有对上传文件格式的要求和相关提示 并且自动进行判断)
                        ·当上述进行完成后并且判断符合条件后可以点击”训练“按钮进入训练界面
                            ·训练视图就是训练完成后的结果显示和对应模型的下载
                ·其次是模型的导入：
                    这一部分就是在前端的操作来更改后端在测试模块选择的对应的算法和参数
                    实现的核心关键是要将训练得到的模型参数封装成为一个函数或者模块 从而进行方便的调用
                ·最后是模型的测试：
                    这一部分整体上的逻辑和第一部分其实是差不多的 本质上都是数据集的上传
                    不过在测试部分 数据集其实可以只有一条记录 也就是对一个数据进行测试并且输出
                    同样支持多条数据的上传 就是采用表单和文件的模式
                    最后测试结果会显示在页面上 并且统一使用某个文件格式(.csv/.xls/xlsx)作为响应且提供文件的下载链接


4.11
    Django 使用 request 和 response 来在系统中传递状态
    当一个页面page被请求时 Django会创建一个 HttpRequest 对象 这个对象包含了请求的元数据
    然后 Django加载相应的视图View 将HttpRequest作为视图函数的第一个参数
    每个视图View负责返回一个HttpResponse对象
    HttpRequest 和 HttpResponse 对象的API官方参考文档：
    https://docs.djangoproject.com/zh-hans/4.2/ref/request-response/
    对于A10在线训练的Web界面 这里需要添加和设计的功能可以是：
        提供训练数据集(.csv/.xls ..)的下载 提供训练结果表单(.csv/.xls ..)的文件下载
        大赛要求输出是.json格式的输出 因此也可以将HttpResponse设置为JsonResponse
        到时候需要具体考虑


7.2
    
